import edu.wpi.first.gradlerio.deploy.roborio.RoboRIO;

plugins {
    id "java";
    id "edu.wpi.first.GradleRIO" version "2022.4.1";
    id "org.jetbrains.kotlin.jvm" version "1.6.10";
}

sourceCompatibility = JavaVersion.VERSION_11;
targetCompatibility = JavaVersion.VERSION_11;

String ROBOT_MAIN_CLASS = "frc.robot.Main";

deploy {
    targets {
        roborio(getTargetTypeClass('RoboRIO')) {
            team = project.frc.getTeamOrDefault(2036);
            debug = project.frc.getDebugOrDefault(false);

            artifacts {
                frcJava(getArtifactTypeClass('FRCJavaArtifact')) {
                }

                frcStaticFileDeploy(getArtifactTypeClass('FileTreeArtifact')) {
                    files = project.fileTree('src/main/deploy');
                    directory = '/home/lvuser/deploy';
                }
            }
        }
    }
}

def deployArtifact = deploy.targets.roborio.artifacts.frcJava;

wpi.java.debugJni = false;

boolean includeDesktopSupport = true;

dependencies {
    implementation wpi.java.deps.wpilib();
    implementation wpi.java.vendor.java();

    roborioDebug wpi.java.deps.wpilibJniDebug(wpi.platforms.roborio);
    roborioDebug wpi.java.vendor.jniDebug(wpi.platforms.roborio);

    roborioRelease wpi.java.deps.wpilibJniRelease(wpi.platforms.roborio);
    roborioRelease wpi.java.vendor.jniRelease(wpi.platforms.roborio);

    nativeDebug wpi.java.deps.wpilibJniDebug(wpi.platforms.desktop);
    nativeDebug wpi.java.vendor.jniDebug(wpi.platforms.desktop);
    simulationDebug wpi.sim.enableDebug();

    nativeRelease wpi.java.deps.wpilibJniRelease(wpi.platforms.desktop);
    nativeRelease wpi.java.vendor.jniRelease(wpi.platforms.desktop);
    simulationRelease wpi.sim.enableRelease();

    testImplementation 'junit:junit:4.12';
}

wpi.sim.addGui().defaultEnabled = true;
wpi.sim.addDriverstation();

jar {
    from { configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) } }
    manifest edu.wpi.first.gradlerio.GradleRIOPlugin.javaManifest(ROBOT_MAIN_CLASS);
    duplicatesStrategy = DuplicatesStrategy.INCLUDE;
}

deployArtifact.jarTask = jar;
wpi.java.configureExecutableTasks(jar);
wpi.java.configureTestTasks(test);
